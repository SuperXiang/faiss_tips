name: Build from source
on: [push]
jobs:
  Build-from-source:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      run: |
        sudo apt install -y build-essential swig
        sudo apt install -y intel-mkl
        sudo snap install cmake --classic

        cd $HOME
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/miniconda.sh
        bash $HOME/miniconda.sh -b -p $HOME/miniconda

        #### Because gh actions don't support "source .bashrc", I simply run export here.
        # echo 'export PATH="$HOME/miniconda/bin:$PATH"' >> $HOME/.bashrc
        # source $HOME/.bashrc
        export PATH="$HOME/miniconda/bin:$PATH"
        conda update conda --yes
        conda update --all --yes
        conda install numpy --yes
        which python

        cd $HOME
        git clone https://github.com/facebookresearch/faiss.git
        cd faiss
        
        cmake -B build \
            -DBUILD_SHARED_LIBS=ON \
            -DBUILD_TESTING=ON \
            -DFAISS_OPT_LEVEL=avx2 \
            -DFAISS_ENABLE_GPU=OFF \
            -DFAISS_ENABLE_PYTHON=$HOME/miniconda/bin/python \
            -DCMAKE_BUILD_TYPE=Release .
        
        make -C build -j faiss faiss_avx2
        
        make -C build -j swigfaiss swigfaiss_avx2
        
        cd build/faiss/python
        python setup.py install

        #### Because gh actions don't support "source .bashrc", I simply run export here.
        # echo 'export PYTHONPATH=$HOME/faiss/build/faiss/python/build/lib:$PYTHONPATH' >> $HOME/.bashrc
        # source $HOME/.bashrc
        export PYTHONPATH=$HOME/faiss/build/faiss/python/build/lib:$PYTHONPATH


    - name: Test
      run: |
        ### We need to run export again if we move to the different section
        export PATH="$HOME/miniconda/bin:$PATH"
        export PYTHONPATH=$HOME/faiss/build/faiss/python/build/lib:$PYTHONPATH

        cd $HOME/faiss

        echo "##### Check ldd of .so #####"
        ldd build/faiss/libfaiss_avx2.so

        echo "##### Run c++ test #####"        
        make -C build -j demo_ivfpq_indexing
        ./build/demos/demo_ivfpq_indexing

        echo "##### Run python test #####"        
        cd
        python -c "import faiss, numpy; err = faiss.Kmeans(10, 20).train(numpy.random.rand(1000, 10).astype('float32')); print(err)"

        echo "##### AVX2 is activated or not #####"
        LD_DEBUG=libs python -c "import faiss" 2>&1 | grep libfaiss_avx2.so
